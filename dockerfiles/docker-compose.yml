version: '3'

services:
  client:
    image: dndtracker:client
    build:
      context: ../client
    expose:
    - 3000
    restart: on-failure
    ports:
    - 3000:3000
    volumes:
    - ../client:/client
    - /client/node_modules
    depends_on:
    - apiGateway
    links:
    - apiGateway
    networks:
    - dndnet
    environment:
    - APP_SERVER_URL=apiGateway

  apiGateway:
    image: node:11
    restart: on-failure
    expose:
    - 3001
    ports:
    - 3001:3001
    tty: true
    volumes:
    - ../api:/usr/src/service
    - apiGateway_nodemodules:/usr/src/service/node_modules
    depends_on:
    - characterService
    networks:
    - dndnet
    environment:
    - APP_MONGO_URL=mongodb
    - APP_MONGO_PORT=27017

  characterService:
    image: node:11
    restart: on-failure
    expose:
    - 3002
    ports:
    - 3002:3002
    tty: true
    volumes:
    - ../characterService:/usr/src/service
    - character_nodemodules:/usr/src/service/node_modules
    working_dir: /usr/src/service
    command: npm run dev
    environment:
    - NODE_ENV=development
    - PORT=3002
    - HOST=0.0.0.0
    - APP_MONGO_URL=mongodb
    - APP_MONGO_PORT=27017
    depends_on:
    - mongodb
    networks:
    - dndnet

  mongodb:
    image: mongo
    restart: on-failure
    container_name: mongodb
    volumes:
    - ../data-node:/data/db
    ports:
    - 27017:27017
    command: mongod --noauth --smallfiles
    networks:
    - dndnet

volumes:
  character_nodemodules:
    external: true
  apiGateway_nodemodules:
    external: true

networks:
  dndnet:
    driver: bridge
