# import * from './generated/prisma.graphql'

type User {
  id: ID!
  name: String
  email: String
  permissions: [Permission!]!
}

type SuccessMessage {
  message: String
}

type Mutation {
  login(email: String!, password: String!): User
  signout: SuccessMessage
  signup(name: String!, email: String!, password: String!): User!
  addFolk(
    name: String!
    strMod: Int!
    conMod: Int!
    dexMod: Int!
    chaMod: Int!
    intMod: Int!
    wisMod: Int!
  ): Folk!
  addLanguage(name: String!): Language!
  addFeature(name: String!, description: String!, effects: [String!]!): Feature!
  addCharacterClass(templateClassName: String!, level: Int): CharacterClass!
  # TODO Remove the userId as an arg after you finish testing
  addCharacter(
    userId: String
    characterName: String!
    characterClassId: String!
  ): Character!
  addTemplateClass(name: String!, features: [String]!): TemplateClass!
}

type Query {
  user: User
  users: [User]
  me(name: String!): User
  folk: Folk
  folks: [Folk]!
  language: Language
  languages: [Language]!
  characters: [Character]!
  templateClass: TemplateClass
  templateClasses: [TemplateClass]!
  characterClass: CharacterClass
  characterClasses: [CharacterClass]!
}
