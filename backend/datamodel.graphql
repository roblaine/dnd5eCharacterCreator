enum Permission {
  USER
  ADMIN
}

enum StatList {
  STR
  CON
  DEX
  CHA
  WIS
  INT
}

type User {
  id: ID! @id @unique
  name: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: String
  permissions: [Permission] @scalarList(strategy: RELATION)
  characters: [Character]
}

type Language {
  id: ID! @id @unique
  name: String!
}

type Feature {
  id: ID! @id @unique
  name: String! @unique
  description: String!
  effects: [String] @scalarList(strategy: RELATION)
  fromFolk: Folk @relation(name: "FolkFeatures")
  fromClass: Class @relation(name: "ClassFeatures")
}

type Folk {
  id: ID! @id @unique
  name: String!
  strMod: Int @default(value: 0)
  conMod: Int @default(value: 0)
  dexMod: Int @default(value: 0)
  chaMod: Int @default(value: 0)
  intMod: Int @default(value: 0)
  wisMod: Int @default(value: 0)
  speed: Int!
  languages: [Language!]! @relation(name: "Languages")
  features: [Feature]! @relation(name: "Features")
}

type Stat {
  id: ID! @id @unique
  name: StatList!
  score: Int! @default(value: 10)
  mod: Int! @default(value: 0)
}

type StatBlock {
  id: ID! @id @unique
  stats: [Stat!]! @relation(name: "CharacterStats")
}

type Skill {
  id: ID! @id @unique
  name: String!
  stat: Stat!
  proficient: Boolean @default(value: false)
}

type SkillBlock {
  id: ID! @id @unique
}

type SaveBlock {
  id: ID! @id @unique
}

# Assume numbers on die range from [1 - faces]
type Die {
  id: ID! @id @unique
  faces: Int! @unique
}

# This is the rules for the class. Is not editable by users, only admins
type TemplateClass {
  id: ID! @id @unique
  name: String! @unique
  features: [Feature!]!
}

# Contains a reference to the rules for the class + character's current level
type Class {
  id: ID! @id @unique
  name: String! @unique
  class: TemplateClass!
  level: Int! @default(value: 1)
}

type Character {
  id: ID! @id @unique
  name: String
  class: [Class]
  folk: Folk
  stats: StatBlock
  skills: SkillBlock
  saves: SaveBlock
  acCalc: String
  hitDie: Die
  maxHp: Int
  profBonus: Int
  user: User!
}
