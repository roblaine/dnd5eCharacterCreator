enum Permission {
  USER
  ADMIN
}

type User {
  id: ID! @id @unique
  name: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: String
  permissions: [Permission] @scalarList(strategy: RELATION)
}

type Language {
  id: ID! @id @unique
  name: String!
}

type Feature {
  id: ID! @id @unique
  name: String!
  description: String!
  effects: [String] @scalarList(strategy: RELATION)
  fromFolk: Folk @relation(name: "FolkFeatures")
  fromClass: Class @relation(name: "ClassFeatures")
}

type Folk {
  id: ID! @id @unique
  name: String!
  strMod: Int @default(value: 0)
  conMod: Int @default(value: 0)
  dexMod: Int @default(value: 0)
  chaMod: Int @default(value: 0)
  intMod: Int @default(value: 0)
  wisMod: Int @default(value: 0)
  speed: Int!
  languages: [Language!]! @relation(name: "Languages")
  features: [Feature]! @relation(name: "Features")
}

type StatBlock {
  id: ID! @id @unique
  str: Int!
  con: Int!
  dex: Int!
  cha: Int!
  int: Int!
  wis: Int!
  strMod: Int!
  conMod: Int!
  dexMod: Int!
  chaMod: Int!
  intMod: Int!
  wisMod: Int!
}

type SkillBlock {
  id: ID! @id @unique
}

type SaveBlock {
  id: ID! @id @unique
}

# Assume numbers on die range from [1 - faces]
type Die {
  id: ID! @id @unique
  faces: Int!
}

type Class {
  id: ID! @id @unique
  name: String!
  level: Int! @default(value: 1)
}

type Character {
  id: ID! @id @unique
  name: String!
  class: Class!
  folk: Folk!
  statblock: StatBlock!
  skills: SkillBlock!
  saves: SaveBlock!
  acCalc: String!
  hitDie: Die!
  maxHp: Int!
  profBonus: Int!
}
