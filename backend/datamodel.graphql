type User {
  id: ID! @id @unique
  name: String!
  email: String! @unique
  password: String!
}

type Language {
  id: ID! @id @unique
  name: String!
}

type Feature {
  id: ID! @id @unique
  name: String!
  description: String!
  effects: [String] @scalarList(strategy: RELATION)
  fromFolk: Folk @relation(name: "FolkFeatures")
  fromClass: Class @relation(name: "ClassFeatures")
}

type Folk {
  id: ID! @id @unique
  name: String!
  strMod: Int!
  conMod: Int!
  dexMod: Int!
  chaMod: Int!
  intMod: Int!
  wisMod: Int!
  languages: [Language!]! @relation(name: "Languages")
  features: [Feature]! @relation(name: "Features")
}

type StatBlock {
  id: ID! @id @unique
  str: Int!
  con: Int!
  dex: Int!
  cha: Int!
  int: Int!
  wis: Int!
  strMod: Int!
  conMod: Int!
  dexMod: Int!
  chaMod: Int!
  intMod: Int!
  wisMod: Int!
}

type Class {
  id: ID! @id @unique
  stats: StatBlock!
}

type Character {
  id: ID! @id @unique
}
