version: '3'
services:

  client:
    image: dndtrackerclient
    build:
      context: ./client
    expose:
    - '3000'
    restart: on-failure
    ports:
    - '3000:3000'
    volumes:
    - './client:/client'
    - '/client/node_modules'
    depends_on:
    - api
    links:
    - api
    networks:
    - dndtracker
    environment:
    - APP_SERVER_URL=api

  api:
    image: dndtrackerapi
    build:
      context: ./api
    restart: on-failure
    expose:
    - '3001'
    ports:
    - '3001:3001'
    tty: true
    volumes:
    - './api:/usr/src/service'
    - 'api_nodemodules:/usr/src/service/node_modules'
    depends_on:
    - characterService
    networks:
    - dndtracker
    environment:
    - APP_MONGO_URL=db
    - APP_MONGO_PORT=27017

  characterService:
    image: node:12.2.0-alpine
    restart: on-failure
    expose:
    - '3002'
    ports:
    - '3002:3002'
    tty: true
    volumes:
    - './characterService:/usr/src/service'
    - 'character_nodemodules:/usr/src/service/node_modules'
    working_dir: /usr/src/service
    environment:
    - NODE_ENV=development
    - PORT=3002
    - HOST=0.0.0.0
    - APP_MONGO_URL=db
    - APP_MONGO_PORT=27017
    depends_on:
    - db
    networks:
    - dndtracker

  db:
    image: mongo
    restart: on-failure
    container_name: db
    volumes:
    - './data-node:/data/db'
    ports:
    - '27017:27017'
    command: mongod --noauth --smallfiles
    networks:
    - dndtracker

volumes:
  character_nodemodules:
  api_nodemodules:

networks:
  dndtracker:
